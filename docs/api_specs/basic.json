{
    "openapi": "3.0.0",
    "info": {
        "title": "Cambridge Sports Analytics Prediction Engine API",
        "description": "A robust, resilient, and flexible prediction analytics API that interacts with any dataset of predictive variables and outcomes.",
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "https://api.csanalytics.io/v2/prediction-engine",
            "description": "A robust, resilient, and flexible prediction analytics API that interacts with any dataset of predictive variables and outcomes."
        }
    ],
    "x-hideTryItPanel": true,
    "paths": {
        "/grid": {
            "post": {
                "tags": [
                    "predict"
                ],
                "description": "Essential input arguments for invoking relevance-based grid predictions.",
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/headers/Content-Type"
                    },
                    {
                        "$ref": "#/components/headers/Connection"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for grid prediction",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf" : [
                                    { "$ref": "#/components/schemas/prediction_body" }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response body of a successful post job (grid).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/prediction_task_id" 
                                }
                            }
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Python",
                        "label": "Python Example",
                        "source": "import requests\nimport json\n\nurl = \"https://api.csanalytics.io/v2/prediction-engine/grid\"\n\npayload = {\n    \"y\": [[18.8], [2.3], [3.0], [6.7], [15.2], [20.9], [4.0]],\n    \"X\": [[25.0,2.0,76.0,53.7,23.1],[29.0,1.0,78.0,39.1,5.7],[32.0,2.0,77.0,54.1,5.3],[30.0,5.0,82.0,68.7,8.7],[24.0,1.0,69.0,51.0,20.3],[25.0,2.0,79.0,50.2,20.0],[35.0,3.0,80.0,51.5,9.4]],\n    \"theta\": [[24.0, 5.0, 81.0, 60.0, 11.0]]\n}\n\nheaders = {\n  'x-api-key': 'CSA_API_KEY',\n  'Content-Type': 'application/json',\n  'Connection': 'keep-alive'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=json.dumps(payload))\n\n"
                    }
                ]
            }
        },
        "/maxfit": {
            "post": {
                "tags": [
                    "predict"
                ],
                "description": "Essential input arguments for invoking relevance-based maxfit predictions.",
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/headers/Content-Type"
                    },
                    {
                        "$ref": "#/components/headers/Connection"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for maxfit prediction",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf" : [
                                    { "$ref": "#/components/schemas/prediction_body" }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response body of a successful post job (maxfit).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/prediction_task_id" 
                                }
                            }
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Python",
                        "label": "Python Example",
                        "source": "import requests\nimport json\n\nurl = \"https://api.csanalytics.io/v2/prediction-engine/maxfit\"\n\npayload = {\n    \"y\": [[18.8], [2.3], [3.0], [6.7], [15.2], [20.9], [4.0]],\n    \"X\": [[25.0,2.0,76.0,53.7,23.1],[29.0,1.0,78.0,39.1,5.7],[32.0,2.0,77.0,54.1,5.3],[30.0,5.0,82.0,68.7,8.7],[24.0,1.0,69.0,51.0,20.3],[25.0,2.0,79.0,50.2,20.0],[35.0,3.0,80.0,51.5,9.4]],\n    \"theta\": [[24.0, 5.0, 81.0, 60.0, 11.0]]\n}\n\nheaders = {\n  'x-api-key': 'CSA_API_KEY',\n  'Content-Type': 'application/json',\n  'Connection': 'keep-alive'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=json.dumps(payload))\n\n"
                    }
                ]
            }
        },
        "/psr": {
            "post": {
                "tags": [
                    "predict"
                ],
                "description": "Essential input arguments for invoking relevance-based partial sample regression predictions.",
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/headers/Content-Type"
                    },
                    {
                        "$ref": "#/components/headers/Connection"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for psr prediction",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf" : [
                                    { "$ref": "#/components/schemas/prediction_body" }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The response body returns a job id and job code.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/prediction_task_id" 
                                }
                            }
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Python",
                        "label": "Python Example",
                        "source": "import requests\nimport json\n\nurl = \"https://api.csanalytics.io/v2/prediction-engine/psr\"\n\npayload = {\n    \"y\": [[18.8], [2.3], [3.0], [6.7], [15.2], [20.9], [4.0]],\n    \"X\": [[25.0,2.0,76.0,53.7,23.1],[29.0,1.0,78.0,39.1,5.7],[32.0,2.0,77.0,54.1,5.3],[30.0,5.0,82.0,68.7,8.7],[24.0,1.0,69.0,51.0,20.3],[25.0,2.0,79.0,50.2,20.0],[35.0,3.0,80.0,51.5,9.4]],\n    \"theta\": [[24.0, 5.0, 81.0, 60.0, 11.0]]\n}\n\nheaders = {\n  'x-api-key': 'CSA_API_KEY',\n  'Content-Type': 'application/json',\n  'Connection': 'keep-alive'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=json.dumps(payload))\n\n"
                    }
                ]
            }
        },
        "/results": {
            "get": {
                "tags": [
                    "predict"
                ],
                "description": "Request results and insights for a prediction task.",
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/headers/Content-Type"
                    },
                    {
                        "$ref": "#/components/headers/Connection"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for psr prediction",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf" : [
                                    { "$ref": "#/components/schemas/prediction_task_id" }
                                ]
                            },
                            "example": {
                                "job_id": "1074",
                                "job_code": "66cfc21f7effa501"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Result object(s) of a successful prediction task.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/results" 
                                }
                            }
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Python",
                        "label": "Python Example",
                        "source": "import requests\nimport json\n\nurl = \"https://api.csanalytics.io/v2/prediction-engine/psr\"\n\npayload = {\n    \"job_id\": 1074\n    \"job_code\": \"66cfc21f7effa501\"\n}\n\nheaders = {\n  'x-api-key': 'CSA_API_KEY',\n  'Content-Type': 'application/json',\n  'Connection': 'keep-alive'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data=json.dumps(payload))\n\nprint(response.text)"
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "x-api-key": {
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header",
                "description": "API key required to access the CSA Prediction Engine API"
            }
        },
        "headers": {
            "Content-Type": {
                "name": "Content-Type",
                "in": "header",
                "description": "The content type of the request (application/json)",
                "schema": {
                    "type": "string",
                    "example": "application/json"
                }
            },
            "Connection": {
                "name": "Connection",
                "in": "header",
                "description": "Connection header value (keep-alive)",
                "schema": {
                    "type": "string",
                    "example": "keep-alive"
                }
            }
        },
        "schemas": {
            "prediction_task_id": {
                "type": "object",
                "properties": {
                    "job_id": { "type": "integer", "description": "Prediction task job ID", "example": 1074},
                    "job_code": { "type": "string", "description": "Prediction task job code", "example": "66cfc21f7effa501"}
                }
            },
            "prediction_body": {
                "required": [
                    "access_id",
                    "y",
                    "X",
                    "theta"
                ],
                "type": "object",
                "properties": {
                    "access_id": {
                        "type": "string",
                        "description": "User access identification string for the CSA Prediction Engine",
                        "example": "CSA_ACCESS_ID"
                    },
                    "y": {
                        "type": "array",
                        "description": "Column vector of dependent variable. [N-by-1]",
                        "items": {
                            "type": "array",
                            "items": {
                            "type": "number",
                            "format": "float"
                            }
                        }
                    },
                    "X": {
                        "type": "array",
                        "description": "Matrix of independent variable(s). [N-by-K]",
                        "items": {
                            "type": "array",
                            "items": {
                            "type": "number",
                            "format": "float"
                            }
                        }
                    },
                    "theta": {
                        "type": "array",
                        "description": "Row vector of prediction circumstances. [1-by-K]",
                        "items": {
                            "type": "array",
                            "items": {
                            "type": "number",
                            "format": "float"
                            }
                        },
                        "example": [[24.0, 5.0, 81.0, 60.0, 11.0]]
                    }
                }
            },
            "threshold_option": {
                "type": "object",
                "properties": {
                    "threshold": {
                            "type": "number",
                            "description": "Threshold to evaluate the censor function (relevance or similarity). Float or [1-by-T], if not specified then the model will evaluate across thresholds from [0, 0.99) in 0.20 increments.",
                            "default": null,
                            "example": 0.5
                    }
                }
            },
            "psr_options": {
                "type" : "object",
                "properties": {
                    "is_threshold_percent": {
                        "type": "boolean",
                        "description": "Specify whether the thresholds specified is in percentage (decimal) units.",
                        "default": true,
                        "example": true
                    },
                    "eval_type": {
                        "type": "string",
                        "description": "Specify evaluation censor type: relevance, similarity, or both.",
                        "enum": ["relevance", "similarity", "both"],
                        "default": "both",
                        "example": "both"
                    },
                    "most_eval": {
                        "type": "boolean",
                        "description": "Specify the direction of the threshold evaluation on the corresponding censor type.\n\n- true: [eval_type] score > threshold\n- false: [eval_type] score < threshold",
                        "default": true,
                        "example": true
                    }
                }
            },
            "maxfit_options": {
                "type": "object",
                "properties": {
                    "threshold": {
                        "type": "array",
                        "description": "Threshold to evaluate the censor function (relevance or similarity). Array of threshold values, if not specified then the model will evaluate across thresholds [0.0, 0.2, 0.5, 0.8].",
                        "items": {
                            "type": "number",
                            "format": "float"
                        },
                        "default": [0, 0.20, 0.50, 0.80],
                        "example": [0, 0.20, 0.50, 0.80]
                    }
                }
            },
            "grid_options": {
                "type": "object",
                "properties": {
                    "attribute_combi": {
                        "type": "array",
                        "description": "Matrix of binary row vectors to indicate predictive variable choices. Each row represents a combination of variables to evaluate. If not specified, the prediction function will evaluate all possible combinations. [Q-by-K]",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "default": null,
                        "example": [[0, 1, 1, 0, 0], [0, 0, 0, 1, 0]]
                    },
                    "k": {
                        "type": "integer",
                        "description": "The minimum number of predictive variables to include in each combination of variables evaluated. If not specified, the default is 1.",
                        "default": 1,
                        "example": 1
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "yhat": {
                        "type": "array",
                        "description": "Predicted value(s). [1-by-1] or [1-by-T]",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "example": [[3.285239]]
                    },
                    "fit": {
                        "type": "array",
                        "description": "Fit value [1-by-1]. Fit measures the relationship between relevance and outcomes for a prediction.",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "example": [[0.087690]]
                    },
                    "adjusted_fit": {
                        "type": "array",
                        "description": "Adjusted-fit value [1-by-1]. Adjusted fit provides a measure of expected reliability for each grid cell's prediction.",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "example": [[1.057741]]
                    },
                    "kfit": {
                        "type": "array",
                        "description": "k-fit value [1-by-1]. k-fit measures the relationship between relevance and outcomes for a prediction, adjusted for the number of variables in the model.",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "example": [[0.087690]]
                    },
                    "include": {
                        "type": "array",
                        "description": "Column vector indicating whether specific observations were included in the prediction. [N-by-1]",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "example": [[1], [0], [1], [1], [0], [1], [1]]
                    },
                    "weights": {
                        "type": "array",
                        "description": "Column vector of prediction weights for each observation [N-by-1].",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "example": [[-0.191071], [0.229452], [-0.268879], [1.171929], [-0.046778], [-0.024025], [0.129372]]
                    },
                    "variable_importance": {
                        "type": "array",
                        "description": "Row vector of variable importance on conviction (fit, adjusted_fit, or kfit). [1-by-K]",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "example": [0.326091, 0.098205, 0.205904, 0.189534, 0.187681]
                    },
                    "variable_importance_on_yhat": {
                        "type": "array",
                        "description": "Row vector of variable importance on outcomes (y_hat). [1-by-K]",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "example": [0.188679, 0.232704, 0.194969, 0.308176, 0.075472]
                    },
                    "eval_type": {
                        "type": "array",
                        "description": "Specifies the type of censor evaluation performed. Possible values: relevance, similarity, or both.",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "relevance",
                                    "similarity",
                                    "both"
                                ]
                            }
                        },
                        "example": "both"
                    },
                    "most_eval": {
                        "type": "array",
                        "description": "Boolean values indicating if the model was evaluated using the most relevant features.",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "boolean"
                            }
                        },
                        "example": [[true]]
                    },
                    "yhat_linear": {
                        "type": "array",
                        "description": "Linear regression prediction outcome.",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "example": [[7.145171]]
                    }
                }
            }
        }
    }
}